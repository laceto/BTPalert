# Specify your time interval
# https://crontab.cronhub.io/

on:
  schedule:
    - cron: "*/1 * * * *" # every minute

jobs:
  generate-data:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest,   r: 4.0.2}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      # GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      # RENV_PATHS_ROOT: ~/.local/share/renv
      CLIENT_ID_SECRET: ${{ secrets.CLIENT_ID_SECRET}}
      CLIENT_SECRET_SECRET: ${{ secrets.CLIENT_SECRET_SECRET}}
      EMAILFROM_SECRET: ${{ secrets.EMAILFROM_SECRET}}
      EMAILTO_SECRET: ${{ secrets.EMAILTO_SECRET}}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '2.17.1'

      - name: Install packages
        run: Rscript -e 'install.packages(c("dplyr", "jsonlite", "gmailr", "glue", "readr", "rvest"))'

      # - uses: r-lib/actions/setup-r-dependencies@v2
      #
      # - name: Cache packages
      #   uses: actions/cache@v1
      #   with:
      #     path: ${{ env.RENV_PATHS_ROOT }}
      #     key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-renv-
      #
      # - name: Restore packages
      #   shell: Rscript {0}
      #   run: |
      #     if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
      #     renv::restore()

      - name: Generate data
        run: |
          source("BTPsendalert.R")
        shell: Rscript {0}

      - name: Commit files
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add --all
          git commit -am "add data"
          git push
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
